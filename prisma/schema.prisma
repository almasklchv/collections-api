// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  BLOCKED
}

enum CollectionType {
  COINS
  POSTCARDS
  BANKNOTES
  PAINTING
  STAMPS
}

model User {
  id           String       @id @default(cuid())
  email        String       @unique
  passwordHash String
  name         String
  role         Role
  status       Status
  collections  Collection[]
  comments     Comment[]
  likes        Like[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Collection {
  id          String         @id @default(cuid())
  user        User           @relation(fields: [userId], references: [id])
  userId      String
  title       String
  description String
  theme       CollectionType
  imageUrl    String?
  items       Item[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Item {
  id           String     @id @default(cuid())
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId String
  title        String
  tags         String[]
  comments     Comment[]
  likes        Like[]
  customFields Json?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Comment {
  id        String   @id @default(cuid())
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Like {
  id        String   @id @default(cuid())
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}
